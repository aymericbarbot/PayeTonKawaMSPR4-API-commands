name: ci-dev

on:
  push:
    branches: [ dev ]    # déclenché après merge PR

permissions:
  contents: write
  id-token: write

jobs:
  unit:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.outcome.outputs.state }}
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with: { node-version: 22, cache: npm }
    - id: test
      run: |
        npm ci
        npm run build
        npm test
      continue-on-error: true
    - id: outcome
      run: echo "state=${{ steps.test.outcome }}" >> $GITHUB_OUTPUT

  compose-integration:
    needs: unit
    if: needs.unit.outputs.result == 'success'
    runs-on: ubuntu-latest
    services:
      rabbitmq: { image: rabbitmq:3.13-management, ports: ['5672:5672'] }
    outputs:
      result: ${{ steps.outcome.outputs.state }}
    steps:
    - uses: actions/checkout@v4
    - id: compose
      run: |
        docker compose -f docker-compose.integration.yml up --abort-on-container-exit --exit-code-from sut
      continue-on-error: true
    - id: outcome
      run: echo "state=${{ steps.compose.outcome }}" >> $GITHUB_OUTPUT

  promote-or-rollback:
    needs: [unit, compose-integration]
    runs-on: ubuntu-latest
    if: always()       # on veut exécuter quoi qu’il arrive
    steps:
    - uses: actions/checkout@v4
      with: { fetch-depth: 2 }

    - name: Git config bot
      run: |
        git config user.email "bot@github"
        git config user.name  "github-actions"

    # ---- Succès total → promotion vers ci-test
    - if: needs.unit.outputs.result == 'success' && needs.compose-integration.outputs.result == 'success'
      name: Promote dev commit to ci-test
      run: git push --force-with-lease origin HEAD:ci-test

    # ---- Échec (unit ou compose) → branche error + rollback dev + mail
    - if: needs.unit.outputs.result != 'success' || needs.compose-integration.outputs.result != 'success'
      name: Handle failure
      run: |
        ERR_BRANCH="error-${GITHUB_SHA::8}"
        git switch -c "$ERR_BRANCH"
        git push origin "$ERR_BRANCH"
        git switch dev
        git reset --hard HEAD~1
        git push --force-with-lease origin dev

    - name: Send failure mail
      if: failure()    # s’exécute seulement si un des jobs a échoué
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: ${{ secrets.SMTP_SERVER }}
        server_port:     ${{ secrets.SMTP_PORT }}
        username:        ${{ secrets.SMTP_USER }}
        password:        ${{ secrets.SMTP_PASS }}
        subject: "[CI] Tests KO après merge dans dev"
        to: ${{ github.event.pusher.email }}
        from: ${{ secrets.SMTP_FROM }}
        body: |
          Les tests (unit ou intégration) ont échoué pour le commit ${{ github.sha }} fusionné dans dev.
          Le commit a été retiré et placé dans la branche ${{ env.ERR_BRANCH }}.
          Consulte l’action ci-dev pour les logs.
